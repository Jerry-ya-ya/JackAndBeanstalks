version: '3.9'
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/.angular/cache
    ports:
      - "4200:4200"
    environment:
      - CHOKIDAR_USEPOLLING=true
    container_name: angular-test
    networks:
      - mynet
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
    ports:
      - "5000:5000"
    env_file:
      - .env
      - .env.2test
    container_name: flask-test
    networks:
      - mynet
  test:
    build:
      context: ./e2e
      dockerfile: Dockerfile.dev
    depends_on:
      - frontend
      - backend
    volumes:
      - ./e2e:/app
      - /app/node_modules
    env_file:
      - .env
      - .env.2test
    ports:
      - "4100:4100"
    container_name: e2e-test
    networks:
      - mynet
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    container_name: redis
  celery_worker:
    build:
      context: Backend/celery_worker
      dockerfile: Dockerfile
    command: celery -A celery_worker worker --loglevel=info
    volumes:
      - ./Backend:/app/Backend
    environment:
      - PYTHONPATH=/app/Backend
    env_file:
      - .env
      - .env.2test
    depends_on:
      - redis
    container_name: celery-worker-test
  celery_beat:
    build:
      context: Backend/celery_worker
      dockerfile: Dockerfile
    command: celery -A celery_worker beat --loglevel=info
    volumes:
      - ./Backend:/app/Backend
    environment:
      - PYTHONPATH=/app/Backend
    env_file:
      - .env.2test
    depends_on:
      - redis
      - celery_worker
    container_name: celery-beat-test
networks:
  mynet:
    driver: bridge