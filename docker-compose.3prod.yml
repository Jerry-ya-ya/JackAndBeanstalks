version: "3.9"
services:
  frontend:
    build: ./frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    container_name: angular-frontend
  backend:
    build: ./backend
    ports:
      - "5000:5000"
    depends_on:
      - db
    env_file:
      - .env
      - .env.3prod
    restart: always
  db:
    image: postgres:16
    restart: always
    volumes:
      - ./database/postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    container_name: pg-prod
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    container_name: redis
  celery_worker:
    build:
      context: Backend/celery_worker
      dockerfile: Dockerfile
    command: celery -A celery_worker worker --loglevel=info
    volumes:
      - ./Backend:/app/Backend
    environment:
      - PYTHONPATH=/app/Backend
    env_file:
      - .env
      - .env.3prod
    depends_on:
      - redis
    container_name: celery-worker-prod
  celery_beat:
    build:
      context: Backend/celery_worker
      dockerfile: Dockerfile
    command: celery -A celery_worker beat --loglevel=info
    volumes:
      - ./Backend:/app/Backend
    environment:
      - PYTHONPATH=/app/Backend
    env_file:
      - .env.3prod
    depends_on:
      - redis
      - celery_worker
    container_name: celery-beat-prod
volumes:
  pgdata_prod: